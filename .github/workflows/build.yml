name: Build

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Use Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Restore Dependencies
        run: npm ci

      - name: Lint and Test
        run: npm test

      - name: Build
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Verify No Unstaged Changes
        run: |
          if [[ "$(git status --porcelain)" != "" ]]; then
            echo git status
            git status
            echo git diff
            git diff
            echo "::error::Unstaged changes detected."
            exit 1
          fi

  compile:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Use Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Restore Dependencies
        run: npm ci

      - name: Build
        run: npm run compile
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: gh-describe-canary
          path: ./dist/gh-describe-*

  test:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Test Run
        uses: ./

  release:
    runs-on: ubuntu-latest
    if: >
      startsWith(github.ref, 'refs/tags/') ||
      github.event_name == 'release'
    needs:
      - build
      - compile
      - test

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore
        uses: actions/download-artifact@v2
        with:
          name: gh-describe-canary
          path: ./dist

      - name: Run gh-describe
        id: ghd
        uses: ./

      - name: Create Release and Upload Files
        run: |
          if gh release view "${GITHUB_RELEASE_TAG}" --json tagName >/dev/null && echo 'release found'; then
            gh release upload --clobber "${GITHUB_RELEASE_TAG}" ./dist/gh-describe-*
          else
            gh release create -d --generate-notes "${GITHUB_RELEASE_TAG}" ./dist/gh-describe-*
          fi
        env:
          GITHUB_RELEASE_TAG: ${{ steps.ghd.outputs.tag }}
          GITHUB_TOKEN: ${{ github.token }}
